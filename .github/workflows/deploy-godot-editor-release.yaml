#This workflow can only run on master! See the limitation mentioned in "Note:" here: https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_run
name: Deploy Godot Editor Release
on:
  workflow_run:
    workflows: [ "Create Draft Release" ]
    types:
      - completed

jobs:
  deploy-editor-release:
    strategy:
      matrix:
        name: [ Linux ]
        include:
          - name: Linux
            os: ubuntu-latest
            platform: x11
            binary: bin/godot.x11.tools.64
            nproc_command: $(nproc)
            cat_command: cat
          - name: OSX
            os: macos-latest
            platform: osx
            binary: bin/godot.osx.tools.64
            nproc_command: $(sysctl -n hw.logicalcpu)
            cat_command: cat
          - name: Windows
            os: windows-latest
            platform: windows
            binary: bin/godot.windows.tools.64.exe
            nproc_command: ${{ env.NUMBER_OF_PROCESSORS }}
            cat_command: type
    runs-on: ${{ matrix.os }}
    steps:
      # has to be the first step as the download url is only valid for 1 minute! See: https://stackoverflow.com/a/65049722
      - name: Get release infos from draft release
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: create-draft-release.yaml
          workflow_conclusion: success

      - name: Save release infos as variables
        id: save_release_info
        run: |
          echo "::set-output name=upload_url::$(${{ matrix.cat_command }} release_url/release_url.txt)"
          echo "::set-output name=godot_version::$(${{ matrix.cat_command }} godot_version/godot_version.txt)"

      - name: Configure dependencies
        if: matrix.platform == 'x11'
        run: |
          sudo apt-get update && sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm

      - name: Clone Godot Engine
        uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: ${{ steps.save_release_info.outputs.godot_version }}-stable

      - name: Clone Godot JVM module.
        uses: actions/checkout@v2
        with:
          path: modules/kotlin_jvm
          submodules: recursive

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons

      - name: Build with editor release
        run: scons platform=${{ matrix.platform }} target=release_debug -j${{ matrix.nproc_command }}

      - name: Upload editor binary
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.save_release_info.outputs.upload_url }}
          asset_path: bin/${{ matrix.binary }}
          asset_name: ${{ matrix.binary }}
          asset_content_type: application/octet-stream